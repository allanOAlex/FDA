@model IEnumerable<GetAllEmployeesResponse>

@{
    var createEmpRequest = new CreateEmployeeRequest();
    var updateEmpSalaryRequest = new UpdateEmployeeSalaryRequest();
}


<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table me-1"></i>
        Users
    </div>
    <div class="card-body">
        <table id="datatablesSimple">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Salary</th>
                    <th>
                        <button type="button" class="btn btn-primary btn-sm" style="background: #444d6a !important; color:#fff !important;" data-toggle="modal" data-target="#createEmployeeModal">
                            Add New
                        </button>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @if (Model!.Count() > 0)
                    {
                        @foreach (var emp in Model)
                        {
                            <tr style="font-size:15px">
                                <td>@emp.Name</td>
                                <td>@emp.Salary</td>
                                
                                <td>
                                    <button type="button" class="btn  btn-sm loat-end m-1" style="background: #c0c0c0 !important; color:#444d6a !important; text-transform: none;" data-toggle="modal" data-target="#exampleModalCenter" asp-controller="User" asp-action="Details">
                                        Details
                                    </button>
                                    <button type="button" class="btn  btn-sm loat-end m-1" style="background: #d6ad53 !important; color:#fff !important; text-transform: none;" data-toggle="modal" data-target="#exampleModalCenter" asp-controller="User" asp-action="Edit">
                                        Edit
                                    </button>
                                    <button type="button" class="btn  btn-sm loat-end m-1" style="background: #ba5567 !important; color:#fff !important; text-transform: none;" data-toggle="modal" data-target="#exampleModalCenter" asp-controller="User" asp-action="Delete">
                                        Delete
                                    </button>

                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="100">
                                <br>
                                <p>
                                    <strong>
                                        No records to display
                                    </strong>
                                </p>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="100">
                            <br>
                            <p>
                                <strong>
                                    No records to display
                                </strong>
                            </p>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>

<!-- Create Employee Modal -->
<div class="modal fade" id="createEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="createUserModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalTitle">Add Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" onclick="resetAndCloseModal()">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createEmployeeForm" asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row mb-3">
                        <div class="col-xs-12 col-sm-4 col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="@createEmpRequest.Name" class="control-label"></label>
                                <input asp-for="@createEmpRequest.Name" class="form-control" />
                                <span asp-validation-for="@createEmpRequest.Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-4 col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="@createEmpRequest.Salary" class="control-label"></label>
                                <input asp-for="@createEmpRequest.Salary" class="form-control" />
                                <span asp-validation-for="@createEmpRequest.Salary" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <button type="button" class="btn  btn-sm loat-end m-1" style="background: #c0c0c0 !important; color:#444d6a !important; text-transform: none;" onclick="resetForm()">
                                Reset
                            </button>

                            <button type="button" class="btn  btn-sm loat-end m-1" data-dismiss="modal" aria-label="Close" style="background: #d6ad53 !important; color:#fff !important; text-transform: none;" onclick="resetAndCloseModal()">
                                Cancel
                            </button>

                            <button type="submit" class="btn  btn-sm loat-end m-1" style="background: #444d6a !important; color:#fff !important; text-transform: none;" asp-controller="User" asp-action="Create">
                                Submit
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Update Salary Modal -->
<div class="modal fade" id="updateEmpSalaryModal" tabindex="-1" role="dialog" aria-labelledby="createUserModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalTitle">Update Salary</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" onclick="resetAndCloseModal()">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateEmpSalaryForm" asp-action="UpdateEmployeeSalary">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row mb-3">
                        <div class="col-xs-12 col-sm-4 col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="@updateEmpSalaryRequest.NewSalary" class="control-label"></label>
                                <input asp-for="@updateEmpSalaryRequest.NewSalary" class="form-control" />
                                <span asp-validation-for="@updateEmpSalaryRequest.NewSalary" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col">
                            <button type="button" class="btn  btn-sm loat-end m-1" style="background: #c0c0c0 !important; color:#444d6a !important; text-transform: none;" onclick="resetForm()">
                                Reset
                            </button>

                            <button type="button" class="btn  btn-sm loat-end m-1" data-dismiss="modal" aria-label="Close" style="background: #d6ad53 !important; color:#fff !important; text-transform: none;" onclick="resetAndCloseModal()">
                                Cancel
                            </button>

                            <button type="submit" class="btn  btn-sm loat-end m-1" style="background: #444d6a !important; color:#fff !important; text-transform: none;" asp-controller="User" asp-action="UpdateEmployeeSalary">
                                Submit
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        resetForm()
    </script>

    <script>
        resetAndCloseModal();
    </script>

    <script>
        $('#updateEmpSalaryForm').submit(function (e) {
            e.preventDefault();

            if (isTokenExpired()) {
                handleTokenExpiration();
            } else {
                updateEmployeeSalary();
            }

        })

        function isTokenExpired() {
            var token = localStorage.getItem('authToken');
            var expirationDate = getTokenExpirationDate(token);
            var currentDateTime = new Date();
            return expirationDate < currentDateTime;
        }

        function getTokenExpirationDate(token) {
            var tokenData = parseJwt(token);
            var expirationDate = new Date(tokenData.exp * 1000); // Convert to milliseconds
            return expirationDate;
        }

        function parseJwt(token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(jsonPayload);
        }

        function handleTokenExpiration() {
            $.ajax({
                url: '@Url.Action("HandleTokenExpired", "Auth")',
                type: 'POST',
                success: function (response) {
                    if (response.successful) {
                        $.ajax({
                            url: '@Url.Action("CreateJwtToken", "Auth")',
                            type: 'GET',
                            success: function (response) {
                                console.log(response)
                                if (response.successful) {
                                    localStorage.removeItem('authToken');
                                    localStorage.setItem('authToken', response.jwtAuthToken);
                                    updateEmployeeSalary();
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'New Jwt Success!',
                                        showCancelButton: true,
                                        confirmButtonText: 'Okay',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            console.log("New Jwt Confirmed!")
                                        }
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'New JwtToken generation failed',
                                        text: 'An error occurred while generating a new token.',
                                        confirmButtonText: 'Okay',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            console.log("New Jwt Confirmed!")
                                        }
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'AJAX request failed',
                                    text: 'An error occurred while communicating with the server.',
                                });
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Somewthing went wrong',
                            text: 'An error occurred during registration.',
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'AJAX request failed',
                        text: 'An error occurred while communicating with the server.',
                    });
                }
            });

        }

        function updateEmployeeSalary() {
            $.ajax({
                url: '@Url.Action("UpdateEmployeeSalary", "Employee")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.successful) {
                        Swal.fire('Success!', 'Salary updated successfully!.', 'success');
                    } else {
                        Swal.fire('Error!', 'Salary update failes. Please contact system admin.', 'error');
                    }
                },
                error: function () {
                    alert('An error occurred during operation.');
                }
            });
        }

    </script>


}
